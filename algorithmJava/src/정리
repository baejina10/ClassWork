1. 선수지식
   - 자바문법
   - 배열과 자료구조
   - IO
   - String, StringBuilder, Scanner, StringTokenizer
   - 이중 for
   - 브루트포스(Brute Force)로 우선 답을 구하기
     ---------------------
        완전탐색, 무차별대입...
        가능한 모든 조합이나 경우의 수를 이용해서 무조건 결과를 도출할 수 있도록 하나씩 확인하는 방법
      
2. 배열관련알고리즘
   1) PrefixSum(구간합)
   2) 투포인터알고리즘
      - 문제를 해결하기 위해서 두 개의 인텍스를 관리하고 특정 조건을 만족하는 부분집합이나
        특정값을 찾는 알고리즘
      - 포인터의 위치는 문제를 분석해서 적절하게 정의
        => 구간의 양끝을 가리키도록, 첫 시작값
      - 합이 작으면 오른쪽 포인터를 오른쪽으로 이동해서 합을 키우기
      - 합이 크면 왼쪽 포인터를 오른쪽으로 이동해서 합을 줄이기
      - 필요하면 정렬 후 작업
      미션> 2003번, 1940번  
      
3. 스택
   - 컴퓨터공학에서 가장 기본이 되는 자료구조
   - 한쪽 끝에서만 자료를 넣고 뺄 수 있는 구조
   - Last In First Out(LIFO)
   - 깊이우선탐색에서 스택을 사용
   - 사용자 정의로 스택을 구현해야 한다면 배열을 이용해서 사용자정의 스택을 구현할 수 있다.
   [스택이 적합하다는 것을 판단하는 기준]
   - 가장 최근 데이터와 비교??
   - HTML태그검사, 경로탐색
   숙제
   백준 10799번
   
4. Queue(LinkedList)
   - First In First Out (FIFO)
   - front에서는 삭제연산
   - rear에서는 삽입연산
   - BFS에서 사용
   - 컴퓨터 버퍼, 시작과 끝이 다른 작업
   숙제
   백준 10845번

5. sort
   1) 버블정렬
      - 한 번 반복문이 실행될때 가장 큰 값(내림차순 - 작은 값)이 맨 뒤(맨 앞)으로 이동
      - 전체 n개 데이터가 있으면 최대 n-1본 반복해서 처리하면 완전히 정렬
      - 왼쪽에 있는 숫자와 오른쪽에 있는 숫자를 비교해서 큰수를 뒤로 뺀다.
      
   2) 선택정렬
      - 가장 작은 것(오름차순기준)으=을 선택해서 계속 앞으로 보내기
      - 선택정렬은 정렬되지 않은 영역의 첫 번째 요소부터 마지막 요소까지 비교해서 가장 작은 값을 첫 번째 요소로 가져온다.
   
   3) 삽입정렬
      - 삽입정렬도 버블정렬이나 선택정렬과 마찬가지로 효율성이 떨어진다. - O(n2)
      - 두 가지 영역 즉, 정렬된 영역과 정렬되지 않은 영역으로 나뉜다.
      - 정렬되지 않은 영역에서 요소를 하나씩 꺼내서 정렬된 영역의 적절한 위치에 요소를 삽입하면서 정렬하는 방식
      - 보통 첫 번째 값이 정렬된 값이라고 전제하고 작업
      - 정렬되지 않은 영역의 가장 앞에 있는 요소와 정렬된 영역의 마지막 요소와 비교하기 시작   
        






