<<생성자>>
생성자는 객체가 생성될 때 한 번 호출되는 특별한 메소드

[객체생성]
클래스명 변수 = new 생성자()
------          ------
^                   ^
|__사용할 클래스 타입    |__ 클래스 안에 미리 정의되어 있는 생성자메소드 호출
                        특별한 메소드지만 일반메소드와 동일하게 메소드를 실행할때
                        외부에서 데이터를 입력받아 사용하는 것이 가능
                        
[특징]
 - new연산자가 생성자 메소드를 보고 메모리에 할당해야 하는 클래스가 무엇인지 파악하고 작업해야 하므로 
   생성자메소드 작성 규칙이 존재
 - 생성자메소드는 객체가 생성되면서 처리해야 하는 기능이나 처음 한 번 실행되어야 하는 로직을 정의할 목적
 - db연결, 네트워크 접속, os와 통신해서 os자원을 사용하는 경우
 - 위의 경우는 API에서 제공하는 클래스의 생성자인 경우이고 사용자가 직접 만드는 생성자는 주로
   객체가 갖고 있는 속성(멤버필드)의 값을 초기화하는 용도
   
[생성자 작성 규칙]
1. 객체가 생성되면서 무조건 생성자가 호출된다. 
   개발자가 생성자를 정의하지 않으면 컴파일러가 매개변수없는 생성자를 만들어서 준다.(매개변수없는 생성자 -> 기본생성자)

2. 생성자를 정의하는 경우 생성자이름은 클래스명과 대소문자까지 동일하게 정의

3. 생성자를 직접 정의하는 경우 리턴타입을 명시하지 않는다.
   (void도 정의하지 않는다.)
   
4. 생성자도 메소드이므로 매개변수를 정의할 수 있다.
   => 사용자정의로 생성자를 정의하는 경우 생성자에서 멤버면수를 초기화할 수 있도록 코드를 작성하는 것이 일반적
   
5. 생성자도 생성자오버로딩을 지원
   => 매개변수타입이나 갯수가 다르면 여러 개를 정의해서 사용할 수 있다.

6. 클래스를 정의하면서 개발자가 생성자를 정의하면 컴파일러가 더이상 기본생성자를 제공하지 않는다.

7. 프레임워크를 사용하면 내부에서 객체를 생성하고 관리하는데 이때 기본생성자를 호출해서 사용하므로 기본생성자는 무조건 정의

8. 다른 생성자 호출이 가능
   this(매개변수1,매개변수2)
   ---------------------
      호출하고 싶은 생성자의 매개변수 갯수와 타입에 맞게 호출








